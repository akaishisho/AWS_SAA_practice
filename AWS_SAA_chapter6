#第6章 ストレージサービス

##6-1 AWSのストレージサービス
- IoTやビッグデータ、機械学習などのIT技術の革新に伴い、データ量の増加やデータの取り扱い方法の多様化が進んでいる
- それに応じて、ストレージにも様々な種類が登場している

###ストレージサービスの分類とストレージのタイプ
- AWSが提供するストレージサービスは以下の5つ、AWSドキュメントの分類ではAWS Snowballもストレージサービスに分類されるが、詳細は割愛
- Snowballは、ペタバイトを超えるような大容量のデータをAWSへ移行したり、AWSから持ち出したりするときに使用するデータ転送サービス
  - Amazon EBS
  - Amazon EFS
  - Amazon S3
  - Amazon S3 Glacier
  - AWS Storage Gateway
- 上記以外にもファイルサーバーのサービスとしてAmazon Fsxがある
- ストレージサービスは一般的に次の3つのタイプに分類できる
  - ブロックストレージ
    - データを物理的なディスクにブロック単位で管理するストレージ
    - データベースや仮想サーバーのイメージ保存領域のように、頻繁に更新されたり高速なアクセスが必要とされる用途で使われる
    - Amazon EBSがブロックストレージのサービス
  - ファイルストレージ
    - ブロックストレージ上にファイルシステムを構成して、データをファイル単位で管理するストレージ
    - 複数のクライアントからネットワーク経由でファイルにアクセスするといったデータ共有のために使われたり、過去データをまとめて保存したりといった用途で使われる
    - Amazon EFSがファイルストレージのサービス
  - オブジェクトストレージ
    - ファイルに任意のメタデータを追加してオブジェクトとして管理するストレージ
    - ファイルの内容をストレージ内で直接操作することはできず、作成済みのデータに対するHTTP(S)経由の登録・削除・参照といった操作が可能
    - 更新頻度の少ないデータや大容量のマルチメディアコンテンツを保存する用途で使われる
    - Amazon S3とAmazon S3 Glacierがオブジェクトストレージのサービス
    - オブジェクトストレージはクラウドの進展とともに注目されている比較的新しいストレージサービス

##6-2 EBS
- Amazon EBSはAWSが提供するブロックストレージサービス(EBSとは、Elastic Block Storeの略)
- EC2のOS領域、EC2の追加ボリューム、RDSのデータ保存領域などに使用する
- EBSは基本的にはEC2に1対1に対応するサービスのため、複数のEC2インスタンスから同時にアタッチするといった使い方はできなかった
- EBSマルチアタック機能により複数のEC2から同時にアタッチ可能となったが、制約が多いため、使い方も限定的
- EBSは作成時にAZを指定するため、指定したAZに作成されたEC2インスタンスからのみアタッチ可能
- 異なるAZのEC2インスタンスにアタッチしたい場合は、EBSのスナップショットを取得し、スナップショットから指定のAZでEBSボリュームを作成することでアタッチ可能となる

###EBSのボリュームタイプ
- EBSのボリュームタイプはSSDで2種類、HDDタイプで2種類の計4つ
  - 汎用SSD(gp2)
  - プロビジョンドIOPS SSD(io1)
  - スループット最適化HDD(st1)
  - Cold HDD(sc1)
- 旧世代のマグネティックと呼ばれるHDDのストレージタイプもあるが、新規で作成するときはマグネティックタイプは使わずに、現行のボリュームタイプから最適なものを選ぶ

###汎用SSD(gp2)
- EBSの中で最も一般的な、SSDをベースとしたボリュームタイプ
- EC2インスタンスを作成する際のデフォルトボリュームタイプとしても利用される
- 性能の指標としてIOPS(1秒あたりに処理できるI/Oアクセスの数)を用い、3IOPS/GB(最低100IOPS)から最大16,000IOPS/ボリュームまで、容量に応じたベースライン性能がある
- 一定期間、性能を向上させるバースト機能も用意されている

###プロビジョンドIOPS SSD(io1)
- プロビジョンドIOPSはEBSの中で最も高性能な、SSDをベースとしたボリュームタイプ
- RDSやEC2インスタンスでデータベースサーバーを構成する場合など、高いIOPS性能が求められる際に利用される
- IOPS負荷の高いユースケースと、高いスループットが必要なユースケースの両方に適したストレージタイプ

###スループット最適化HDD(st1)
- HDDをベースとしたスループット重視のボリュームタイプ
- ログデータに対する処理やバッチ処理のインプット用ファイルなど、大容量ファイルを高速に読み取るようなユースケースに適している

###Cold HDD(sc1)
- 4つのストレージタイプの中でストレージとしての性能はそれほど高くはないが、最も低コストなボリュームタイプ
- 利用頻度があまりなく、アクセス時の性能もそれほど求められないデータをシーケンシャルにアクセスするようなユースケースやアーカイブ領域の用途に適している

###ベースライン性能とバースト性能
- プロビジョンドIOPS以外のストレージタイプには、ストレージの容量に応じてベースライン性能がある
- 処理量の一時的な増加に対応可能なバースト性能という指標もある
- バースト性能は一時的な処理量の増加に対して使われることを想定したものであるため、バースト性能に頼ったサイジングはしてはいけない

###EBSの拡張・変更
- EBSボリュームに対して変更作業を行った場合、同一のEBSボリュームの変更作業は6時間以上あける必要がある
- 現行世代以外のEC2インスタンスタイプで使用中のEBSボリュームに対する変更作業では、インスタンスの停止やEBSのデタッチが必要になる場合がある

###容量拡張
- すべてのタイプのEBSは1ボリュームあたりの最大容量が16TB
- ディスク容量が不足したら、必要に応じて何度でも拡張可能
- オンラインで使用中のEBSボリュームを拡張した後は、EC2インスタンス上でOSに応じたファイルシステムの拡張作業を別途実施して、OS側でも認識できるようにしておくこと
- 縮小はできない

###ボリュームタイプの変更
- 現行世代タイプ間でのタイプ変更が可能
- gp2タイプで作成したがIOPSが不足することが分かったので、io1タイプに変更したいといった要件に対応可能
- プロビジョンドIOPSタイプで指定したIOPS値については、増減のどちらの変更も可能
- IOPSの変更には最大24時間かかる場合がある

###EBSの可用性・耐久性
- EBSは内部的にAZ内の複数の物理ディスクに複製が行われており、AWS内で物理的な故障が発生した場合でも、利用者が意識することはほとんどない
- EBSにはスナップショット機能もあるため、定期的にバックアップを取得することで必要な時点に戻すことが可能
- データのリストアは、スナップショットから新規EBSボリュームを作成し、EC2インスタンスにアタッチすることで可能
- 信頼性は高いが壊れない訳ではないので、スナップショットなどでバックアップをとる運用設計の検討は必要

###EBSのセキュリティ
- ストレージ自体を暗号化するオプションがある
- 暗号化オプションを有効にすると、ボリュームだけでなく、ボリュームから取得したスナップショットも暗号化される
- 暗号化処理はEC2インスタンスが稼働するホストで実施されるので、EBS間をまたぐデータ通信時のデータも暗号化された状態になる
- 既に作成済みのEBSボリュームを暗号化した場合
  - EBSボリュームのスナップショットを取得 → スナップショットを暗号化 → 暗号化されたスナップショットから新規EBSボリュームを作成 → EC2インスタンスにアタッチしているEBSボリュームを入れ替え
- 既存のブートボリュームを暗号化する場合は、スナップショットではなくAMIを取得し、AMIコピー時に暗号化をし、コピーされたAMIからEC2インスタンスを作成することで可能

###Amazon EBSマルチアタッチ
- 制約は多いが、今まで実現できなかった複数のインスタンスから同一のEBSをアタッチできる機能
- 同一のAZのインスタンスから飲みアタッチ可能で、別AZからはできない
- プロビジョンドIOPS SSD(io1)ボリュームのみ利用可能

##6-3 EFS
- Amazon EFSは、容量無制限で複数のEC2インスタンスから同時にアクセスが可能なファイルストレージサービス(EFSとは、Elastic File Systemの略)
- クライアントからEFSへの接続は、一般的なNFS(Network File System)プロトコルをサポートしているため、NFSクライアントさえあれば特別なツールや設定は不要
- amazon-efs-utilsツールを使うと、EFSへのマウントに関する推奨オプションが含まれていたり、ログが記録できたりするため、EFSへ接続するクライアントには導入する方が良い
- EFSには多種多様なユースケースに対応できるように、パフォーマンスモードやスループットモードといったモードが用意されている

###EFSの構成要素
- EFSは以下の3つの要素から構成される
  - ファイルシステム
  - マウントターゲット
  - セキュリティグループ
- ファイルが作成されると自動的に3ヶ所以上のAZに保存される分散ファイルシステムを構成
- 作成したファイルシステムにアクセスするために、AZごとにサブネットを指定してマウントターゲットを作成する
- マウントターゲットを作成すると、ターゲットポイント(接続FQDN)が1つと各AZのマウントターゲット用IPアドレスが発行される
- EC2からは1つのFQDNでアクセスするが内部的には自動的に接続元のEC2インスタンスと同一AZのマウントターゲットIPアドレスが返却されるため、レイテンシーを低くする設計がされている
- マウントターゲットにはセキュリティグループを指定でき、不要なアクセスを制限できる

###EFSのパフォーマンスモード
- 汎用パフォーマンスモードと最大I/Oパフォーマンスモードの2つパフォーマンスモードがある
- ほとんどの場合は、汎用パフォーマンスモードを使えば問題なし
- 数百〜数千台といったクライアントから同時にEFSへアクセスがあるようなユースケースにも耐えられるように、最大I/Oパフォーマンスモードが用意されている
- 最大I/Oパフォーマンスモードを選択した場合、スループットを最大化する代わりに、各ファイル操作のレイテンシーが汎用パフォーマンスモードより少し高くなる
- どちらが良いか見分ける指標として、CloudWatchのPercentIOLimitというメトリクスが参考になる
- 性能テスト実施中にPercentIOLimitが長時間高い状態(80〜100％)である場合は、最大I/Oパフォーマンスモードに変更した方がよい場合もある
- パフォーマンスモードはファイルシステムを一度作成すると変更できないため、本番導入前に入念にテストを実施して検討すること

###EFSのスループットモード
- パフォーマンスモードとは別に2つのスループットモードが用意されている
  - バーストスループットモード
    - EFSに保存されているデータ容量に応じてベースラインとなるスループットが設定されている
    - 一時的なスループットの上昇にも耐えられるようなバースト機能を持ったモード
    - ベースラインのスループットは1GBあたり50KB/秒、保存されているデータ量に応じてスループットと期間が設定される
    - 最低バーストスループットは100MB/秒
    - 1TBを超えると、毎日12時間、ストレージの1TBあたり100MB/秒までバーストできるバーストクレジットが貯まるように設計される
  - プロビジョニングスループットモード
    - バーストスループットモードで設定されているベースラインスループットを大幅に上回るスループットが必要な場合や、
      一時的なバースト時にバーストスループットで定められている最大スループットよりも高い性能が必要な場合に、任意のスループット値を指定することができるモード
    - 容量によらず最大1GB/秒までのスループットを指定できる
    - それ以上のスループットが必要な場合は制限の緩和申請が可能
    - Web配信用のコンテンツやアプリケーション用のデータといった、データサイズはそれほど大きくないものの頻繁にアクセスしたり、大量のインスタンスからの同時アクセスを受けるようなデータをEFSに配置する場合に最適
  - どちらを選択するべきか見分ける指標として、CloudWatchのBurstCreditBalanceというメトリクスが参考になる
  - クレジットバランスを全て使い切ったり、常に減少傾向である場合はプロビジョニングスループットモードを選択
  - スループットモードはEBS運用中にも変更可能
  - スループットモードの変更、およびプロビジョニングスループットモードでのスループット値の削減は、前回作業から24時間以上間隔をあける必要あり

  ##6-4 S3
  - Amazon S3は非常に優れた耐久性をもつ、容量無制限のオブジェクトストレージサービス(S3は、Simple Storage Serviceを意味する)
  - ファイルストレージとの違いは、ディレクトリ構造をもたないフラットな構成であることや、ユーザーが独自にデータに対して情報を付与できること
  - S3の各オブジェクトには、RESTやSOAPといったHTTPをベースとしたWeb APIを使ってアクセスする
  - EBSのスナップショットショットの保存場所として使われるなど、AWSのバックエンドサービスにも使われており、AWSの中でも非常に重要なサービス
  - 主なユースケース
    - データバックアップ
    - ビックデータ解析用のデータレイク
    - ETL(Extract/Transform/Load)の中間ファイルの保存
    - Auto Scaling構成されたEC2インスタンスやコンテナからのログ転送先
    - 静的コンテンツのホスティング
    - 簡易的なKey-Value型のデータベース

###S3の構成要素
- バケット
  - オブジェクトを保存するための領域
  - バケット名はAWS内で一意にする必要あり
- オブジェクト
  - S3に格納されるデータそのもの
  - 各オブジェクトにはキー(オブジェクト名)が付与され、「バケット名＋キー名＋バージョンID」で必ず一意になるURLが作成される
  - URLをWeb APIなどで指定してオブジェクトを操作する
  - 格納できるオブジェクトに制限はないが、1つのオブジェクトサイズは最大5TBまで
- メタデータ
  - オブジェクトを管理するための情報
  - オブジェクト作成日時やサイズなどのシステム定義メタデータのみならず、アプリで必要な情報をユーザー定義メタデータとして保持できる

###S3の耐久性と整合性
- S3に保存されたデータは、複数のAZ、さらにはAZ内の物理的ストレージに複製される
- データの複製方式としては、結果整合性方式を採用
- そのため、データの保存後、複製が完全に終わるまでにデータを参照すると、参照先によっては保存前の状態が表示されることもある点には注意

###ストレージクラス
- 用途に応じて5つのランク(ストレージクラス)分けがされている
- 各項の耐久性と可用性は設計の性能で、可用性にはSLA(Service Level Agreement)が設定されている
  - S3標準
    - デフォルトのストレージクラス
    - 低レイテンシーと高スループットを兼ね備えた、S3の性能が最も発揮されるクラス
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.99%
  - S3標準-低頻度アクセス
    - S3標準に比べて格納コストが安価なストレージクラス
    - 参照頻度が低いデータ向けに設定されたクラスであるため、データへのアクセスは随時可能であるが、データの読み出し容量に対する従量課金が行われる
    - 高速なアクセスが必要なものの、それほど頻繁にアクセスしない類のデータを保存するのに最適
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.9%
  - S3 1ゾーンーIA
    - 単一のAZ内のみでデータを複製するストレージクラス
    - 高い耐久性を発揮するが、AZ単位で障害が発生した場合にデータの復元ができない可能性がある
    - その点以外はS3標準-低頻度アクセスと同等のサービス仕様
    - 耐久性はイレブンナインであるが、1つのAZ内の耐久性のため、保存しているAZでデータ消失を伴う障害が発生した場合、データは消失する
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.5%
  - S3 Intelligent - Tiering
    - 参照頻度の高低を明確に決めることができないデータを扱う場合に有効なストレージクラス
    - S3標準とS3標準-低頻度アクセスの2層構成となっており、30日以上参照されなかったデータは自動的にS3標準-低頻度アクセスに移動される
    - ライフサイクル管理で自動化できる半面、頻繁に移動が発生する場合はコスト高になる
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.9%
  - S3 Glacier
    - ほとんど参照されないアーカイブ目的のデータを保存するストレージクラス
    - オブジェクト新規作成時にこのクラスを選択することはできない
    - S3 Glacier以外のストレージクラスを選択して、ライフサイクル管理機能を使ってこのストレージクラスを指定することで利用可能となる
    - 保存されたデータにアクセスする場合、事前にアクセスをリクエストする必要があり、アクセスまで数時間かかる
    - オブジェクトはS3 Glacierに保存されるが、S3で管理するオブジェクトであり、S3 Glacierを介して直接アクセスはできない
    - データの取り出しには数分から標準で5時間程度かかる
    - バルク取り出しによる大量データ取得の場合は、5~12時間かかる
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.99%
  - S3 Glacier Deep Archive
    - S3 Glacier同様にアーカイブ用途のストレージクラス
    - S3 Glacierよりさらにアクセス頻度が少ないデータを想定
    - データの取得もさらに時間がかかるようになっている
    - データの取り出しは標準で12時間以内、バルク取り出しによる大量のデータ取得の場合は、12時間~48時間かかる
    - その半面、GBあたりののストレージ単価はさらに低く、S3 Glacierに比べて最大75％安価になる
      - 耐久性:99.999999999%(イレブンナイン)
      - 可用性:99.99%

###ライフサイクル管理
- S3に保存されたオブジェクトはその利用頻度に応じてライフサイクルを定義することができる
- ライフサイクル設定では、次のどちらかを選択できる
  - 移行アクション
    - データの利用頻度に応じてストレージクラスを変更するアクション
    - オブジェクト作成当初はアクセス頻度が高いが、一定期間経過すると利用頻度や重要度が低くなり、最後にはアーカイブとして保存するといった移行が可能
  - 有効期限アクション
    - 指定された期限を越えたオブジェクトをS3から削除するアクション
    - 利用期間が決まっているオブジェクトや一時的に作成されたオブジェクトなどを定期的に整理することができる
    - S3は容量無制限のストレージサービスであるが、保存容量に応じて従量課金されるため、不要なデータを定期的に削除することでコスト削減が図れる

###バージョニング管理
- バージョニング機能を有効にすると、1つのオブジェクトに対して複数のバージョンを管理することができる
- バケット単位で有効/無効を指定できる
- バージョニングされたオブジェクトは差分管理ではなく、新・旧オブジェクトの両方が保存され、バージョンIDで区別される
- そのため、両バージョン分の保存量が必要になる

###Webサイトホスティング機能
- 静的コンテンツに限って、Webサイトとしてホスティングする環境を作成できる
- 静的コンテンツのリリースは通常のS3の利用と同様に、S3バケットへ保存することで行える
- サーバサイドの動的なコンテンツに関してはS3をWebサイトホスティングとして使用することはできない

###独自ドメインでS3Webサイトホスティングをする場合の注意点
- S3のWebサイトホスティングを設定すると自動的にドメイン(FQDN)が作成される
- そのサイトに独自ドメインでアクセスしたい場合、Route53などのDNSにCNAME情報を設定する
- この際、バケット名とドメイン名を一致させる必要がある
- S3の前段にCloudFrontを配置する場合は、バケット名とドメイン名を合わせる必要はない

###S3のアクセス管理
- S3のアクセス管理にはバケットポリシー、ACL、IAMが使える
- バケットポリシーはバケット単位でアクセスを制御する
- バケットに保存されるオブジェクトすべてに適用されるので、バケットの用途に応じた全体的なアクセス制御をするときに有効
- ACL(アクセスコントロールリスト)はオブジェクト単位で公開/非公開を制御する場合に使用する
- IAMでの制御は、ユーザー単位でS3のリソースを制御する場合に使用
- バケットポリシーのIAMユーザー制御は、IAMユーザーの名称と一致したバケットのみ利用させるといった少し特殊なユースケースに適用可能な制御方法である
- IAMユーザーに対する制御を行う場合はIAMのポリシーを利用する

###署名付きURL
- アクセスを許可したいオブジェクトに対して期限を指定してURLを発行する機能
- バケットやオブジェクトのアクセス制御を変更することなく特定のオブジェクトに一時的にアクセスを許可したい場合に有効
- この機能はユーザー制御ではないため、署名付きURLを知っていれば、期間中は誰でもアクセスできる点は注意が必要

###データ暗号化
- S3に保存するデータは暗号化できる
- 暗号化の方式は、サーバー側での暗号化とクライアント側での暗号化の2種類から選択できる
- サーバー側での暗号化では、データがストレージに書き込まれるときに暗号化され、読み出されるときに復号される
- クライアント側での暗号化では、AWS SDKを使いS3に送信する前にデータが暗号化される
- 復号時は、クライアント側で暗号化されたデータのメタデータからどのキーで復号するのかが判別され、それに基づいてオブジェクトが復号される

###S3のブロックパブリックアクセス機能とS3 Access Analyzer
- 意図せぬS3バケットの外部公開(パブリックアクセス)による情報漏洩の対策として登場した機能が、S3のプロパブリックアクセス機能
- この機能は、新規・任意のACLおよびバケットポリシーの４段階でパブリックアクセスを禁止する設定ができる
- 新規のバケット作成はデフォルトでパブリックアクセスをブロックするようになっている
- その他にS3 Access AnalyzerでS3バケットの監視、保護ができるようになっている
- S3はかなり安全側に重心を置く設計に移り変わってきている

###S3のその他の機能
- 多くの機能があるが、今回はS3 SelectとTransfer Accelerationについて触れる
  - S3 Select
    - SQL文を利用してS3オブジェクトのコンテンツをフィルタリングし、必要なデータのみを取得する機能
    - 必要なデータのみを取得できるので、転送するデータ量を削減できる
    - これによりコストと時間の短縮を図れる
  - S3 Transfer Acceleration
    - 遠隔地のS3へのデータ転送をサポートする機能
    - CloudFrontのエッジロケーションを活用し、ユーザーは最寄りのエッジロケーションに転送し、あとはAWSの大容量かつ安定したバックボーン回線を利用して転送することができる。

##6-5 S3 Glacier
- Amazon S3 Glacierは、S3と同様にイレブンナインの耐久性を持ちながら、さらに容量あたりの費用を抑えたアーカイブストレージサービス
- S3 Glacierにデータを保存するとデータの取り出しに時間がかかる
- 保存するデータに対して名称を付けることはできず、自動採番されたアーカイブIDで管理することになる
- 上記の点を踏まえると、S3 Glacierはオンプレミス環境での磁気テープのように長期間保存し、アクセス頻度が低く、取り出しにある程度時間がかかっても構わないデータを保存するユースケースに適している
- データの保存はAPIによる操作かS3のライフサイクル管理機能によって行う

###S3 Glacierの構成要素
- 次の4つの要素から構成されるが、基本的な構造はS3と同じ
  - ボールト
    - アーカイブを保存するための領域
    - S3のバケットに相当する
    - ボールト名はリージョンおよびアカウント内で一意であれば良いため、他のアカウントで利用されていても使用可能
  - アーカイブ
    - S3 Glacierに格納されるデータ自身、S3のオブジェクトに相当する
    - 各アーカイブには一意のアーカイブIDとオプションの説明が割り当てられる
    - アーカイブIDには138バイトのランダムな文字列が自動的に付与される
  - インベントリ
    - 各ボールトに保存されているアーカイブの情報を収集
    - およそ1日1回の頻度で更新されるため、最新の情報が反映されるまでにはタイムラグがある
    - リアルタイムで状況を確認したい場合は、マネジメントコンソールで確認するか、ListVaults APIを実行する
  - ジョブ
    - アーカイブやインベントリに対して検索をかけたり、データをダウンロードするといった要求に対して処理を実行し、処理の状況を管理する

###データの取り出しオプション
- S3 Glacierにアーカイブしたデータを閲覧するには、データの取り出しリクエストを出す
- 取り出しリクエストを出してから実際に取り出せるようになるまでの待ち時間に応じて、高速、標準、バルクの3種類のリクエストオプションがある
- 待ち時間が短いほど、取り出しやリクエストにかかる費用が高くなる

###S3 Glacier Select
- アーカイブデータに対してSQLを実行して、条件に合ったデータを抽出する機能
- 対象のアーカイブデータは非圧縮のCSV形式でなければならないなどの条件はあるが、特的のデータだけをアーカイブから簡単に取り出すことができる

###データ暗号化
- S3 Glacierにデータを保存するときにはSSLを使ったデータ転送が行われる
- S3 Glacierに保存されるデータは標準で暗号化が行われる

###削除禁止機能(ボールトロック)
- コンプライアンス上の理由で、アーカイブしたファイルの変更・削除をできなくするという要件が出てくる場合がある
- 実現方法の1つとしては、S3のバケットポリシーやIAMの権限で実施できる人を制限する方法が考えらえる
- もうひとつの方法は、S3 Glacierの削除禁止機能(ボールトロック)を利用して、AWSの機能を使って削除できなくする方法もある
- ボールトロックは、S3 Glacier APIを通じてボールトロックポリシーを対象となるボールトに要求することから始まる
- ポリシーがボールトと関連づけられるとボールトロックがInProgressの状態になりロックIDが返される
- ユーザーがこのロックIDを使ってボールトロックの開始を要求するとロック処理が完了し、この後の変更・削除ができなくなる
- InProgress状態のまま24時間放置していると、自動的にロック処理は中断される

##6-6 Storage Gateway
- AWS Storage Gatewayはオンプレミスにあるデータをクラウドへ連携するための受け口を提供するサービス
- Storage Gatewayを使って連携されたデータの保存先には、先に説明したS3やS3 Glacierといった、耐久性が高く低コストなストレージが利用される
- Storage GatewayのキャッシュストレージとしてEBSが使われる
- Storage Gatewayはサービスとして独自のストレージを持っているわけではないため、他のストレージを組み合わせて、オンプレミスとAWS間のデータ連携を容易にするためのインターフェイスを提供するサービスと考えられる
- 利用目的を明確にすることで、大容量のデータを効率的に管理できる
- VMwareやHyper-Vの仮想アプライアンスとしてイメージが提供されており、オンプレミス環境に該当のハイパーバイザーが既に存在する場合は簡単に導入ができる
- EC2インスタンスのStorage Gateway用AMIも用意されているため、AWS上にゲートウェイを配置する構成も可能

###Storage Gatewayのタイプ
- ファイルゲートウェイ、ボリュームゲートウェイ、テープゲートウェイの3種類
- ボリュームゲートウェイには、さらにキャッシュ型ボリュームと保管型ボリュームの2つのボリューム管理方法がある
- データの参照頻度や実データの配置場所の違いなどの要件によって最適なゲートウェイを選択することが大切

###ファイルゲートウェイ
- S3をクライアントサーバーからNFSマウントして、あたかもファイルシステムのように扱うことができるタイプのゲートウェイ
- 作成されたファイルは非同期であるが、ほぼリアルタイムでS3にアップロードされる
- アップロードされたファイルは1ファイルごとにS3のオブジェクトとして扱われるため、保存されたデータにS3のAPIを利用してアクセスすることも可能
- 注意点として、データの書き込みや読み込みの速度がローカルディスクに比べて遅いことが挙げられる
- 保管後のデータに対してS3のWeb APIでアクセスするようなユースケースでは有用なゲートウェイタイプ

###ボリュームゲートウェイ
- データをS3に保存することはファイルゲートウェイと同じ
- 各ファイルをオブジェクトとして管理するのではなく、S3のデータ保存領域全体を1つのボリュームとして管理する
- ゆえに、S3に保存されたデータにS3のAPIを利用してアクセスすることはできない
- クライアントサーバーからの接続方式はiSCSI接続になる
- ボリュームはスナップショットを取得することができるため、スナップショットからEBSを作成し、EC2インスタンスにアタッチすることで、スナップショットを取得した時点までのデータにアクセスできるようになる
  - キャッシュ型ボリューム
    - 頻繁に利用するデータはStorage Gateway内のキャッシュディスク(オンプレミス)に保存して高速にアクセスすることを可能とし、すべてのデータを保存するストレージ(プライマリストレージ)としてS3を利用するタイプ
    - データ量が増えたとしてもローカルディスクを拡張する必要がなく、効率的に大容量データを管理できる
    - キャッシュ上に存在しないデータにアクセスする場合はS3から取得する必要があり、データ読み込みの速度がシステム上問題になる場合は適さない
    - キャッシュボリュームとアップロードバッファボリュームにストレージを使用する
    - キャッシュボリュームは頻繁に使用するデータに対して高速にアクセスするためのもので、アップロードバッファボリュームはS3にアップロードするデータを一時的に保管するためのもの
  - 保管型ボリューム
    - すべてのデータを保存するストレージ(プライマリストレージ)としてローカルストレージを利用し、データを定期的にスナップショット形式でS3へ転送するタイプ
    - S3へ転送されたスナップショットはEBSとしてリストア可能なため、必要に応じてEC2インスタンスにアタッチすることでデータを参照することができる
    - すべてのデータがローカルストレージに保存されるため、データへのアクセス速度はStorage Gateway導入によって変化することはない
    - オンプレミスのデータを定期的にクラウドへバックアップする用途に適している

###テープゲートウェイ
- テープデバイスの代替としてS3やS3 Glacierにデータをバックアップするタイプのゲートウェイ
- サードパーティ製のバックアップアプリケーションと組み合わせることができるため、バックアップにテープデバイスを利用している場合は、比較的簡単にStorage Gatewayへの移行が可能

###Storage Gatewayのセキュリティ
- セキュリティ要素には次の3つがある
  - CHAP認証
    - クライアントからStorage GatewayにiSCSIで接続する際に、CHAP認証を設定することができる
    - 不正なクライアントからのなりすましを防止し、通信の盗聴といった脅威に対するリスクを軽減できる
  - データ暗号化
    - AWS KMS(Key Management Service)を使ってデータの暗語化が可能
    - 暗号化されるタイミングはデータが保管されるときであるため、S3に保存されるタイミングで暗号化される
    - 暗号化されたボリュームから取得したスナップショットも同じキーで暗号化される
  - 通信の暗号化
    - オンプレミス環境からStorage Gatewayを経由してS3にデータを転送する際にはHTTPSが使用されるため、通信時のデータ内容は暗号化される