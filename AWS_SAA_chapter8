#第8章 セキュリティとアイデンティティ

##8-1 セキュリティとアイデンティティ

###AWSのアカウントの種類
- AWSには「AWSアカウント」と「IAMユーザー」と呼ばれる2種類のアカウントがある
  - AWSアカウント
    - AWSへサインアップするときに作成されるアカウント
    - AWSのすべてのサービスをネットワーク上のどこからでも利用可能なため、そのユーザーはルートユーザーとも呼ばれる
  - IAMユーザー
    - AWSを利用する各利用者向けに作成されるアカウント
    - 初期状態ではIAMユーザーは存在しない
    - AWSアカウントでログインし、必要に応じてIAMユーザーを作成する
- 複数のAWSアカウントを管理するためのAWS Organizations(組織アカウント)という機能も追加されている
- 組織アカウントを利用することで、複数のアカウントの請求をひとまとめにする一括決済が可能となっている
- 利用可能なサービスをAWSアカウント単位で制限するサービスコントロールポリシー(SCP)も利用できるようになっている

###AWSアカウント
- ルートユーザーはAWSの全サービスに対してネットワーク上のどこからも操作できる権限を持っている
- 強力なアカウントであるため、取り扱いには注意する必要がある
- AWSでシステムを構築・運用する場合は、IAMユーザーを利用することが推奨
- AWSアカウント単位では利用シーンを制御する方法がないため、多要素認証(MFA)の設定をしておくことが推奨される

###IAMユーザー
- IAMユーザーは、AWSの各利用者がWebコンソールにログインして操作するときや、APIを利用してAWSを操作するときなどに使用する
- 各IAMユーザーに対して、操作を許可する(しない)サービスが定義できる
- 各IAMユーザーの権限を正しく制限することで、AWSをより安全に使用できる
- IAMユーザーの管理はセキュリティの要
- VPCやEC2・S3をどんなにセキュアに保って管理しても、IAMユーザーの管理が杜撰であれば、AWSの乗っ取りは簡単であるため、管理はとても重要

###IAMの機能
IAM(Identity and Access Management)の主要な機能には次の4つ
  - IAMポリシー
  - IAMユーザー
  - IAMグループ
  - IAMロール
- ユーザーに権限を付与するまでの流れ
  - AWSサービスやAWSリソースに対する操作権限をIAMポリシーとして定義する
  - IAMポリシーをIAMユーザーやIAMグループにアタッチする
  - IAMユーザーあるいはIAMグループに属するIAMユーザーがマネジメントコンソールにログインすると、付与された権限の操作を行うことができる
- IAMユーザーは、利用者を特定することを前提として利用する
- IAMロールは、必要に応じてどのような権限を付与するかという役割を与えるサービス

##IAMポリシー
- IAMポリシーは、Action(どのサービスの)、Resource(どういう機能や範囲を)、Effect(許可/拒否)という3つの大きなルールに基づいて、AWSの各サービスを利用する上での様々な権限を設定

##インラインポリシーと管理(マネージド)ポリシー
- IAMでは、ユーザーやグループ、ロールに付与する権限をオブジェクトとして管理することが可能で、これをポリシーと呼ぶ。
- ポリシーには、インラインポリシーと管理ポリシーがある
  - インラインポリシー
    - 対象ごとに作成・付与するポリシーで、複数のユーザーやグループに同種の権限を付与するには向かない
  - 管理ポリシー
    - 1つのポリシーを複数のユーザーやグループに適用できる
    - 管理ポリシーには、AWS管理ポリシーとカスタマー管理ポリシーの2種類ある
      - AWS管理ポリシー
        - AWS側が用意しているポリシーで、管理者権限やPowerUser、あるいはサービスごとのポリシーなどがある
      - カスタマー管理ポリシー
        - ユーザー自身が管理するポリシー
        - 記述方法自体はインラインポリシーと同じであるが、個別のユーザー・グループ内に閉じたポリシーなのか共有できるのかの違いがある
        - 最大過去5世代までのバージョンを管理できる
        - 変更した権限に誤りがあった場合、即座に前のバージョンの権限に戻すといったことが可能
- 使い分けとしては、AWS管理ポリシーで基本的な権限を付与し、カスタマー管理ポリシーでIPアドレス制限などの制約を行う
- インラインポリシーについては、管理が煩雑になるため基本的には使わない方針がよい
- ただし、一時的に個別のユーザーに権限を付与するときに利用するといった方法は考えられる
